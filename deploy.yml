# Gateway

apiVersion: v1
kind: Pod
metadata:
  name: gateway
  labels:
   app: gateway
spec:
  volumes:
    - name: nginx
      configMap:
        name: nginx
  containers:
  - image: nginx:1.13.5
    name: gateway
    ports:
      - name: http
        containerPort: 80
      - name: https
        containerPort: 443
    volumeMounts:
      - name: nginx
        mountPath: /etc/nginx
        readOnly: true    
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {

        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;

        keepalive_timeout  65;

        server {
            # Put routing rules here
            location /api {
                proxy_pass http://app1;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  selector:
    app: gateway
  ports:
    - port: 80
  type: LoadBalancer

# Backend services
---
apiVersion: v1
kind: Pod
metadata:
  name: app1
  labels:
   app: app1
spec:
  containers:
  - image: mikewasson/app1
    name: app1
    ports:
      - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: app1
spec:
  selector:
    app: app1
  ports:
    - port: 80
